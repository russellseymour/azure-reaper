

// The Bootstrap 3 Grid system (minus push, pull, and offset)
// built using display:grid;
// (https://css-tricks.com/snippets/css/complete-guide-grid/)

// Advantages:
// * Item height matches tallest item in row
// * No need for element inside item to utilize gutter
// * No awkwardly rounded percentages
// * No negative margin hacks
// * No clear-fix hacks

$numColumns: 12;
$gutterWidth: 15px;
  
.row{
  display: grid;
  grid-template-columns: repeat($numColumns, 5fr); // Uniform columns. No need for rounded percentages to calculate widths.
  grid-gap: $gutterWidth; // Actual gutter width. No need for negative margin hack.
}
.show-grid [class^=col-]{
  padding-top: 10px;
  padding-bottom: 10px;
  // background-color: #eee;
  // background-color: rgba(86,61,124,.15);
  // border: 1px solid #ddd;
  // border: 1px solid rgba(86,61,124,.2);

  border-width: 1px;
  border-style: solid;
}
[class^=col-]{
  grid-column-end: span $numColumns; //Full width fallback when no column size is define for the screen size.
}

.border-green {
  border-color: green;
}

.border-blue {
  border-color: blue;
}

.border-purple {
  border-color: purple;
}

// NESTED LOOP
// Check out the compiled css. It is very repetitive, similar to Bootstrap Grid code
// Loop through responsive breakpoints
@each $size, $abbr in (0,xs),(768px,sm),(992px,md),(1200px,lg){
  @media (min-width: $size){
    // Loop through col classes
    @for $i from 1 through $numColumns{
      .col-#{$abbr}-#{$i}{
        grid-column-end: span $i;
        padding: 5px;
      }
    }
  }
}
